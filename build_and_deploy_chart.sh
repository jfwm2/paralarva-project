#!/bin/bash

usage() {
  echo "usage: $0 [config_file.yaml]"
}

if [[ $# -gt 1 ]]; then
  echo "Illegal number of parameters"
  usage
  exit 1
fi

APP_NAME='paralarva'
BASE_DIR=$(dirname "$0")

BASE_VALUES=${BASE_DIR}/chart_base_values.yaml
CONFIG=$(readlink -f "${BASE_DIR}"/config.yaml)

CHART_DIR=${BASE_DIR}/helm_chart
CHART_VALUES=${CHART_DIR}/values.yaml

if [[ $# -eq 1 ]]; then
  if [[ -e $1 ]]; then
    # if argument is normalized if not a pipe
    [[ -p $1 ]] && CONFIG=$1 || CONFIG=$(readlink -f "$1")
  else
    echo "config file $1 not found, using ${CONFIG}"
  fi
fi
echo "using ${CONFIG} as config file"

cat <<EOF >"${CHART_VALUES}"
# !!! this file was generated by $(basename "$0") !!!
# !!!! do not modify manually as changes may be overridden !!!!

EOF

cat "${BASE_VALUES}" >>"${CHART_VALUES}"

IFS=''
while read -r LINE; do
  # if line is empty no spaces are prepended
  LINE_TO_WRITE=$([[ ${#LINE} -ne 0 ]] && echo "    ${LINE}" || echo '')
  echo "${LINE_TO_WRITE}" >>"${CHART_VALUES}"
done <"${CONFIG}"

# Add an empty line at the end of file if needed
[[ ${#LINE_TO_WRITE} -ne 0 ]] && echo '' >>"${CHART_VALUES}"

echo "installing ${APP_NAME} helm release..."
helm install ${APP_NAME} "${CHART_DIR}" --values "${CHART_VALUES}" ||
  (
    echo "helm release ${APP_NAME} already installed; upgrading it..."
    helm upgrade ${APP_NAME} "${CHART_DIR}" --values "${CHART_VALUES}"
  )
